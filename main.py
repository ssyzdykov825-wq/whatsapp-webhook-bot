from flask import Flask, request
import requests
import threading
import sys

app = Flask(__name__)

# ‚úÖ URL Cloud API 360dialog
WHATSAPP_API_URL = 'https://waba-v2.360dialog.io/v1/messages'

# ‚úÖ –£–∫–∞–∂–∏ —Å–≤–æ–π API-–∫–ª—é—á –æ—Ç 360dialog
HEADERS = {
    'D360-API-KEY': 'ASGoZdyRzzwoTVnk6Q1p4eRAAK',  # ‚¨ÖÔ∏è –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π, –µ—Å–ª–∏ –Ω–∞–¥–æ
    'Content-Type': 'application/json'
}

# ‚úÖ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
def handle_message(sender, text):
    print(f"üöÄ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {sender}: {text}")
    sys.stdout.flush()

    payload = {
        'recipient_type': 'individual',  # ‚úÖ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!
        'to': sender,
        'type': 'text',
        'text': {
            'body': f"–í—ã —Å–∫–∞–∑–∞–ª–∏: {text}"
        }
    }

    try:
        response = requests.post(WHATSAPP_API_URL, headers=HEADERS, json=payload)
        if response.status_code != 200:
            print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", response.status_code, response.text)
        else:
            print("üì§ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:", response.status_code)
        sys.stdout.flush()
    except Exception as e:
        print("üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:", str(e))
        sys.stdout.flush()

# ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ –≤–µ–±—Ö—É–∫–∞
@app.route('/webhook', methods=['POST'])
def webhook():
    data = request.get_json()
    print("üì© –í—Ö–æ–¥—è—â–∏–π JSON:", data)
    sys.stdout.flush()

    if not data:
        return "no data", 400

    try:
        for entry in data.get("entry", []):
            for change in entry.get("changes", []):
                value = change.get("value", {})

                # –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if "messages" in value:
                    for message in value["messages"]:
                        if message.get("type") == "text":
                            sender = message["from"]
                            text = message["text"]["body"]
                            print(f"üí¨ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {sender}: {text}")
                            sys.stdout.flush()
                            threading.Thread(target=handle_message, args=(sender, text)).start()
                        else:
                            print("‚ö†Ô∏è –ù–µ–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è:", message.get("type"))
                            sys.stdout.flush()

                # –°—Ç–∞—Ç—É—Å—ã –¥–æ—Å—Ç–∞–≤–∫–∏
                if "statuses" in value:
                    for status in value["statuses"]:
                        print("üì¶ –°—Ç–∞—Ç—É—Å –¥–æ—Å—Ç–∞–≤–∫–∏:", status)
                        sys.stdout.flush()

                # –≠—Ö–æ-—Å–æ–æ–±—â–µ–Ω–∏—è (–≤–∞—à–∏ –∂–µ –æ—Ç–≤–µ—Ç—ã)
                if "message_echoes" in value:
                    print("‚Ü©Ô∏è –≠—Ö–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–∏—Å—Ç–µ–º—ã (–º–æ–∂–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å)")
                    sys.stdout.flush()

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ –≤–µ–±—Ö—É–∫–∞:", str(e))
        sys.stdout.flush()

    return "ok", 200

# ‚úÖ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
if __name__ == '__main__':
    app.run(host='0.0.0.0', port=10000)
