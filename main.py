import os
import requests
from flask import Flask, request, jsonify
from openai import OpenAI

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask –∏ OpenAI –∫–ª–∏–µ–Ω—Ç–∞
app = Flask(__name__)
client = OpenAI(api_key=os.environ.get("OPENAI_API_KEY"))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ 360dialog
WHATSAPP_API_URL = "https://waba-v2.360dialog.io/messages"
WHATSAPP_API_KEY = os.environ.get("WHATSAPP_API_KEY")

# –•–µ–¥–µ—Ä—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –≤ 360dialog
HEADERS = {
    "Content-Type": "application/json",
    "D360-API-KEY": WHATSAPP_API_KEY
}

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ WhatsApp
def send_whatsapp_message(recipient_phone, message_text):
    payload = {
        "messaging_product": "whatsapp",
        "to": recipient_phone,
        "type": "text",
        "text": {
            "body": message_text
        }
    }
    response = requests.post(WHATSAPP_API_URL, headers=HEADERS, json=payload)
    print(f"üì§ –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response.status_code} {response.text}")
    return response

# –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç ChatGPT
def get_gpt_response(user_message):
    try:
        response = client.chat.completions.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": "–¢—ã –ø—Ä–æ–¥–∞—é—â–∏–π –±–æ—Ç –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –∑—Ä–µ–Ω–∏—è. –û—Ç–≤–µ—á–∞–π –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ AIDA: Attention ‚Äî –ø—Ä–∏–≤–ª–µ—á—å –≤–Ω–∏–º–∞–Ω–∏–µ, Interest ‚Äî –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞—Ç—å, Desire ‚Äî —É—Å–∏–ª–∏—Ç—å –∂–µ–ª–∞–Ω–∏–µ, Action ‚Äî –ø–æ–±—É–¥–∏—Ç—å –∫ –¥–µ–π—Å—Ç–≤–∏—é. –ü–∏—à–∏ –∂–∏–≤–æ, –∫–∞–∫ —á–µ–ª–æ–≤–µ–∫, –±–µ–∑ —à–∞–±–ª–æ–Ω–æ–≤ –∏ –∫–∞–Ω—Ü–µ–ª—è—Ä—â–∏–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π —Å–≤–æ–π—Å—Ç–≤–∞ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞."},
                {"role": "user", "content": user_message}
                {"role": "system",
  "content": "–°–≤–æ–π—Å—Ç–≤–∞ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞ Healvix:
- –£–ª—É—á—à–∞–µ—Ç –∑—Ä–µ–Ω–∏–µ –∑–∞ 21 –¥–µ–Ω—å –±–µ–∑ –æ–ø–µ—Ä–∞—Ü–∏–π
- –°–Ω–∏–º–∞–µ—Ç —É—Å—Ç–∞–ª–æ—Å—Ç—å –∏ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ –≥–ª–∞–∑
- –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–∞–±–æ—Ç—É –≥–ª–∞–∑–Ω—ã—Ö –º—ã—à—Ü
- –ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π —Å–æ—Å—Ç–∞–≤: —á–µ—Ä–Ω–∏–∫–∞, –ª—é—Ç–µ–∏–Ω, –≤–∏—Ç–∞–º–∏–Ω—ã A –∏ E
- –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ª—é–¥–µ–π –æ—Ç 18 –¥–æ 65 –ª–µ—Ç"
}
            ],
            temperature=0.7
        )
        reply = response.choices[0].message.content.strip()
        return reply
    except Exception as e:
        print(f"‚ùå GPT –æ—à–∏–±–∫–∞: {e}")
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

# –í–µ–±—Ö—É–∫ –¥–ª—è –ø—Ä–∏—ë–º–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç WhatsApp
@app.route('/webhook', methods=['POST'])
def webhook():
    data = request.get_json()
    print("üì© –í—Ö–æ–¥—è—â–∏–π JSON:", data)

    try:
        messages = data["entry"][0]["changes"][0]["value"].get("messages")
        if messages:
            user_message = messages[0]["text"]["body"]
            user_phone = messages[0]["from"]

            print(f"üí¨ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_phone}: {user_message}")
            print(f"üöÄ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_phone}: {user_message}")

            gpt_reply = get_gpt_response(user_message)
            send_whatsapp_message(user_phone, gpt_reply)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: {e}")

    return jsonify({"status": "ok"}), 200

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
@app.route('/', methods=['GET'])
def home():
    return "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!", 200

# –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ Render
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
