from flask import Flask, request
import requests
import threading
import sys

app = Flask(__app__)

# ‚úÖ Cloud API URL (—á–µ—Ä–µ–∑ 360dialog)
WHATSAPP_API_URL = 'https://waba-v2.360dialog.io/v1/messages'

# ‚úÖ –ü–æ–¥—Å—Ç–∞–≤—å —Å–≤–æ–π API-–∫–ª—é—á
# –í–ê–ñ–ù–û: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ –≤–∞—à –ê–ö–¢–ò–í–ù–´–ô API-–∫–ª—é—á –æ—Ç 360dialog.
# –ù–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–π –∫–ª—é—á - —á–∞—Å—Ç–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏ 400.
HEADERS = {
    'D360-API-KEY': 'ASGoZdyRzzwoTVnk6Q1p4eRAAK',  # ‚Üê —Ç–≤–æ–π –∫–ª—é—á
    'Content-Type': 'application/json'
}

# ‚úÖ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
def handle_message(sender, text):
    print(f"üöÄ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {sender}: {text}")
    sys.stdout.flush()

    payload = {
        # "messaging_product": "whatsapp", # –≠—Ç–æ –ø–æ–ª–µ –æ–±—ã—á–Ω–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–∏ –û–¢–ü–†–ê–í–ö–ï —Å–æ–æ–±—â–µ–Ω–∏–π –≤ API
        "recipient_type": "individual",
        "to": sender,
        "type": "text",
        "text": {
            "body": f"–í—ã —Å–∫–∞–∑–∞–ª–∏: {text}"
        }
    }

    try:
        response = requests.post(WHATSAPP_API_URL, headers=HEADERS, json=payload)
        if response.status_code != 200:
            print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", response.status_code, response.text)
        else:
            print("üì§ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:", response.status_code)
        sys.stdout.flush()
    except Exception as e:
        print("üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:", str(e))
        sys.stdout.flush()


@app.route('/webhook', methods=['POST'])
def webhook():
    data = request.get_json()
    print("üì© –í—Ö–æ–¥—è—â–∏–π JSON:", data)
    sys.stdout.flush()

    if not data:
        return "no data", 400

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É JSON –ø–µ—Ä–µ–¥ –¥–æ—Å—Ç—É–ø–æ–º –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º
        entry = data.get("entry", [])
        if not entry:
            print("‚ö†Ô∏è JSON –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç 'entry' –∏–ª–∏ –æ–Ω –ø—É—Å—Ç.")
            return "invalid json structure", 400

        changes = entry[0].get("changes", [])
        if not changes:
            print("‚ö†Ô∏è JSON –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç 'changes' –∏–ª–∏ –æ–Ω –ø—É—Å—Ç.")
            return "invalid json structure", 400

        value = changes[0].get("value", {})
        messages = value.get("messages", [])

        for message in messages:
            if message.get("type") == "text":
                sender = message["from"]
                text = message["text"]["body"]
                print(f"üí¨ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {sender}: {text}")
                sys.stdout.flush()
                threading.Thread(target=handle_message, args=(sender, text)).start()
    except Exception as e:
        print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ JSON:", str(e))
        sys.stdout.flush()

    return "ok", 200


if __name__ == '__main__':
    # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ—Ä—Ç 10000, –∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ –≤ –≤–∞—à–µ–º –ø—Ä–∏–º–µ—Ä–µ
    app.run(host='0.0.0.0', port=10000)
