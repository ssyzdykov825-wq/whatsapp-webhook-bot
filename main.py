import os
import requests
import openai
from flask import Flask, request, jsonify

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask
app = Flask(__name__)

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ API –∫–ª—é—á–∞ OpenAI
openai.api_key = os.environ.get("OPENAI_API_KEY")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ 360dialog
WHATSAPP_API_URL = "https://waba-v2.360dialog.io/messages"
WHATSAPP_API_KEY = os.environ.get("WHATSAPP_API_KEY")

HEADERS = {
    "Content-Type": "application/json",
    "D360-API-KEY": WHATSAPP_API_KEY
}

# –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–æ–≤ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
user_histories = {}

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ WhatsApp
def send_whatsapp_message(recipient_phone, message_text):
    payload = {
        "messaging_product": "whatsapp",
        "to": recipient_phone,
        "type": "text",
        "text": {"body": message_text}
    }
    response = requests.post(WHATSAPP_API_URL, headers=HEADERS, json=payload)
    print(f"üì§ –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response.status_code} {response.text}")
    return response

# –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç GPT
def get_gpt_response(user_phone, user_message):
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ—ë –µ—â—ë –Ω–µ—Ç
    if user_phone not in user_histories:
        user_histories[user_phone] = []

    # –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞
    history = user_histories[user_phone]

    # –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —Å –ø–æ—à–∞–≥–æ–≤—ã–º —Å–∫—Ä–∏–ø—Ç–æ–º –∏ —Å–≤–æ–±–æ–¥–æ–π
    system_prompt = (
        "–°–µ–Ω Healvix –∫–æ–º–ø–∞–Ω–∏—è—Å—ã–Ω—ã“£ –º–∞–º–∞–Ω—ã—Å—ã“£. –°–µ–Ω—ñ“£ –º–∞“õ—Å–∞—Ç—ã“£ ‚Äî –∂—ã–ª—ã —Ç“Ø—Ä–¥–µ –∫”©–∑–≥–µ –∞—Ä–Ω–∞–ª“ì–∞–Ω —Ç–∞–±–∏“ì–∏ –∫–µ—à–µ–Ω–¥—ñ “±—Å—ã–Ω—É. "
        "–¢”©–º–µ–Ω–¥–µ–≥—ñ —Å–∫—Ä–∏–ø—Ç—Ç—ñ “õ–æ–ª–¥–∞–Ω, –±—ñ—Ä–∞“õ –∂–∞—É–∞–ø—Ç—ã –∞–¥–∞–º“ì–∞ –±–µ–π—ñ–º–¥–µ. –°–∫—Ä–∏–ø—Ç “õ–∞–¥–∞–º–¥–∞—Ä—ã:\n"
        "1. –°”ô–ª–µ–º–¥–µ—Å—É: ¬´–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ, [–∞—Ç—ã]? –ú–µ–Ω Healvix –∫–æ–º–ø–∞–Ω–∏—è—Å—ã–Ω–∞–Ω –ê–π–¥–æ—Å–ø—ã–Ω. –°—ñ–∑ ”©—Ç—ñ–Ω—ñ–º “õ–∞–ª–¥—ã—Ä“ì–∞–Ω –µ–¥—ñ“£—ñ–∑ ‚Äî 1-2 –º–∏–Ω—É—Ç —Å”©–π–ª–µ—Å—É–≥–µ —ã“£“ì–∞–π–ª—ã –º–∞?¬ª\n"
        "2. –ú”ô—Å–µ–ª–µ–Ω—ñ –∞–Ω—ã“õ—Ç–∞—É\n3. “ö–∞—É—ñ–ø —Ç—É—Ä–∞–ª—ã –µ—Å–∫–µ—Ä—Ç—É\n4. –®–µ—à—ñ–º —Ä–µ—Ç—ñ–Ω–¥–µ Healvix “±—Å—ã–Ω—É\n"
        "5. –°–∞—Ç—É“ì–∞ —à–∞“õ—ã—Ä—É\n6. –ö“Ø–º”ô–Ω–¥–∞—Ä“ì–∞ –∂“±–º—ã—Å —ñ—Å—Ç–µ—É\n7. –¢–∞–ø—Å—ã—Ä—ã—Å “õ–∞–±—ã–ª–¥–∞—É\n\n"
        "–ï–≥–µ—Ä –∫–ª–∏–µ–Ω—Ç –Ω–∞“õ—Ç—ã —Å“±—Ä–∞“õ “õ–æ–π—Å–∞ (“õ“±—Ä–∞–º—ã, —Ç–∏—ñ–º–¥—ñ–ª—ñ–≥—ñ, –±–∞“ì–∞), –æ“ì–∞–Ω –∂–µ–∫–µ –∂–∞—É–∞–ø –±–µ—Ä. "
        "–ë—ñ—Ä–∞“õ –Ω–µ–≥—ñ–∑–≥—ñ –º–∞“õ—Å–∞—Ç ‚Äî —Å–∫—Ä–∏–ø—Ç –±–æ–π—ã–Ω—à–∞ –∫–ª–∏–µ–Ω—Ç—Ç—ñ —Ç–∞–ø—Å—ã—Ä—ã—Å“õ–∞ –±–∞“ì—ã—Ç—Ç–∞—É. "
        "–°”©–π–ª–µ—Å—É —Å—Ç–∏–ª—ñ ‚Äî –∂—ã–ª—ã, —Å–µ–Ω—ñ–º–¥—ñ, “õ—ã—Å“õ–∞. –°–µ–Ω —Å–∞—Ç—É—à—ã –µ–º–µ—Å—Å—ñ“£ ‚Äî —Å–µ–Ω –∫”©–º–µ–∫—Ç–µ—Å—É—à—ñ –º–∞–º–∞–Ω—Å—ã“£."
    )

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è GPT
    messages = [{"role": "system", "content": system_prompt}]
    for h in history:
        messages.append({"role": "user", "content": h["user"]})
        messages.append({"role": "assistant", "content": h["bot"]})

    # –î–æ–±–∞–≤–∏–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    messages.append({"role": "user", "content": user_message})

    # –ó–∞–ø—Ä–æ—Å –≤ OpenAI
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4o",
            messages=messages,
            temperature=0.7
        )
        reply = response['choices'][0]['message']['content'].strip()

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é
        user_histories[user_phone].append({
            "user": user_message,
            "bot": reply
        })

        return reply
    except Exception as e:
        print(f"‚ùå GPT “õ–∞—Ç–µ—Å—ñ: {e}")
        return "–ö–µ—à—ñ—Ä—ñ“£—ñ–∑, “õ–∞–∑—ñ—Ä –∂–∞—É–∞–ø –±–µ—Ä–µ –∞–ª–º–∞–π–º—ã–Ω. –ö–µ–π—ñ–Ω—ñ—Ä–µ–∫ “õ–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑."

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@app.route('/webhook', methods=['POST'])
def webhook():
    data = request.get_json()
    print("üì© –í—Ö–æ–¥—è—â–∏–π JSON:", data)

    try:
        messages = data["entry"][0]["changes"][0]["value"].get("messages")
        if messages:
            user_message = messages[0]["text"]["body"]
            user_phone = messages[0]["from"]

            print(f"üí¨ {user_phone}: {user_message}")

            # GPT-–æ—Ç–≤–µ—Ç
            gpt_reply = get_gpt_response(user_phone, user_message)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ WhatsApp
            send_whatsapp_message(user_phone, gpt_reply)
    except Exception as e:
        print(f"‚ùå –í–µ–±—Ö—É–∫ “õ–∞—Ç–µ—Å—ñ: {e}")

    return jsonify({"status": "ok"}), 200

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
@app.route('/', methods=['GET'])
def home():
    return "Healvix –±–æ—Ç —ñ—Å–∫–µ “õ–æ—Å—ã–ª–¥—ã!", 200

# –õ–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
