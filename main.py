import os
import time
import threading
import requests
from flask import Flask, request, jsonify
from openai import OpenAI
    
app = Flask(__name__)
client = OpenAI(api_key=os.environ.get("OPENAI_API_KEY"))

WHATSAPP_API_URL = "https://waba-v2.360dialog.io/messages"
WHATSAPP_API_KEY = os.environ.get("WHATSAPP_API_KEY")

HEADERS = {
    "Content-Type": "application/json",
    "D360-API-KEY": WHATSAPP_API_KEY
}

USER_STATE = {}

SALES_SCRIPT_PROMPT = """
–°–µ–Ω ‚Äî –ê–π–¥–æ—Å –µ—Å—ñ–º–¥—ñ Healvix –∫”©–∑ –µ–º–¥–µ—É –æ—Ä—Ç–∞–ª—ã“ì—ã–Ω—ã“£ —Ç”ô–∂—ñ—Ä–∏–±–µ–ª—ñ –∫–µ“£–µ—Å—à—ñ—Å—ñ—Å—ñ“£. –ö–ª–∏–µ–Ω—Ç–ø–µ–Ω –∂—ã–ª—ã —Å”©–π–ª–µ—Å—ñ–ø, –µ—Å—ñ–º—ñ–Ω —Å“±—Ä–∞–ø, —à—ã–Ω –º”ô–Ω—ñ–Ω–¥–µ –∫”©–º–µ–∫—Ç–µ—Å—É–¥—ñ –º–∞“õ—Å–∞—Ç —Ç“±—Ç–∞—Å—ã“£. –°–µ–Ω —Ä–æ–±–æ—Ç –µ–º–µ—Å—Å—ñ“£ ‚Äî –∞–¥–∞–º —Å–µ–∫—ñ–ª–¥—ñ, —Å–µ–Ω—ñ–º–¥—ñ, –∂–∞–Ω–∞—à—ã—Ä —Å—Ç–∏–ª–¥–µ —Å”©–π–ª–µ—Å–µ—Å—ñ“£.

–ñ–∞—É–∞–ø—Ç–∞—Ä—ã“£ “õ—ã—Å“õ–∞ –¥–∞ –µ–º–µ—Å, –∞—Ä—Ç—ã“õ —Ç–∞ –µ–º–µ—Å ‚Äî –Ω–∞“õ—Ç—ã, —ç–º–æ—Ü–∏—è–º–µ–Ω, —Ç—ñ—Ä—ñ –∞–¥–∞–º—à–∞. –ö–ª–∏–µ–Ω—Ç —Å–∞“ì–∞–Ω –±—ñ—Ä—ñ–Ω—à—ñ —Ä–µ—Ç –∂–∞–∑—ã–ø —Ç“±—Ä ‚Äî —Å–æ–Ω–¥—ã“õ—Ç–∞–Ω –∞–ª–¥—ã–º–µ–Ω –±–∞–π–ª–∞–Ω—ã—Å –æ—Ä–Ω–∞—Ç, —Å–µ–Ω—ñ–º —Ç—É–¥—ã—Ä.

–ï–≥–µ—Ä –∫–ª–∏–µ–Ω—Ç —Ç–∞“õ—ã—Ä—ã–ø—Ç—ã ”©–∑–≥–µ—Ä—Ç—ñ–ø –∂—ñ–±–µ—Ä—Å–µ –Ω–µ–º–µ—Å–µ —Å“±—Ä–∞“ì—ã–Ω –µ—Ä—Ç–µ—Ä–µ–∫ “õ–æ–π—Å–∞ ‚Äî –∏–∫–µ–º–¥–µ–ª, –∂–∞—É–∞–ø –±–µ—Ä.

–°”©–π–ª–µ—Å—É –¥–æ—Å—ã“£—ã–∑–±–µ–Ω, –∂–∞“õ—ã–Ω—ã“£—ã–∑–±–µ–Ω —Å”©–π–ª–µ—Å–∫–µ–Ω–¥–µ–π –±–æ–ª—Å—ã–Ω. –ê—Ä—Ç—ã“õ –ø–∞—Ñ–æ—Å, —à–∞–±–ª–æ–Ω –∂–æ“õ. –°–µ–Ω—ñ–º –º–µ–Ω “õ–∞—Ä–∞–ø–∞–π—ã–º —Ç—ñ–ª –±–æ–ª—Å—ã–Ω.

–°”©–π–ª–µ—Å—É–¥—ñ –±–∞“ì—ã—Ç—Ç–∞—É“ì–∞ –∫”©–º–µ–∫—Ç–µ—Å–µ—Ç—ñ–Ω –º—ã–Ω–∞ “õ–∞–¥–∞–º–¥–∞—Ä –±–∞—Ä, –±—ñ—Ä–∞“õ —Å–µ–Ω –µ—Ä–∫—ñ–Ω —Å”©–π–ª–µ—Å–µ –∞–ª–∞—Å—ã“£:

1. **–°”ô–ª–µ–º–¥–µ—Å—É + —Ç–∞–Ω—ã—Å—É**  
   ¬´–°–∞–ª–µ–º–µ—Ç—Å—ñ–∑–±–µ. –ï—Å—ñ–º—ñ–º –î–∞—É—Ä–µ–Ω –±–æ–ª–∞–¥—ã, Healvix –∫”©–∑ –æ—Ä—Ç–∞–ª—ã“ì—ã–Ω—ã“£ –º–∞–º–∞–Ω—ã–º—ã–Ω.¬ª  
   ¬´–ö”©–∑–≥–µ “õ–∞—Ç—ã—Å—Ç—ã “õ–∞–Ω–¥–∞–π –ø—Ä–æ–±–ª–µ–º–∞ –±–∞—Ä?¬ª

2. **–≠–º–ø–∞—Ç–∏—è –∂”ô–Ω–µ ”©–Ω—ñ–º–¥—ñ —Ç–∞–Ω—ã—Å—Ç—ã—Ä—É**  
   ¬´–ò”ô, –±“±–ª –∂–∏—ñ –∫–µ–∑–¥–µ—Å–µ—Ç—ñ–Ω –∂–∞“ì–¥–∞–π. –ë—ñ–∑–¥—ñ“£ ”©–Ω—ñ–º—ñ–º—ñ–∑ —Å—ñ–∑–≥–µ –æ—Å—ã –º”ô—Å–µ–ª–µ–¥–µ 
   –∫”©–º–µ–∫ –±–æ–ª–∞ –∞–ª–∞–¥—ã, ”©–π—Ç–∫–µ–Ω—ñ “õ“±—Ä–∞–º—ã–Ω–¥–∞ —Ç–∞–±–∏“ì–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—Ç–µ—Ä –±–∞—Ä, –æ–ª–∞—Ä –∫”©–∑–¥—ñ“£ 
   –¥–µ–Ω—Å–∞—É–ª—ã“ì—ã–Ω –∂–∞“õ—Å–∞—Ä—Ç—É“ì–∞ –±–∞“ì—ã—Ç—Ç–∞–ª“ì–∞–Ω.¬ª

4. **–ë–∞“ì–∞–ª–∞—Ä –º–µ–Ω –∫—É—Ä—Å “±—Å—ã–Ω—ã—Å—ã**  
   ¬´1 “õ–æ—Ä–∞–ø ‚Äî 9 990 ‚Ç∏, 3 “õ–æ—Ä–∞–ø (–∞–∫—Ü–∏—è) ‚Äî 21 990 ‚Ç∏.¬ª  
   ¬´–ë”©–ª—ñ–ø —Ç”©–ª–µ—É –º“Ø–º–∫—ñ–Ω: 12 –∞–π ‚Äì 18 750‚Ç∏, 24 –∞–π ‚Äì 9 375‚Ç∏.¬ª  
   ¬´—Å–æ“£“ì—ã “õ–æ—Ä–∞–ø—Ç–∞—Ä “õ–∞–ª–¥—ã¬ª

5. **–ö“Ø–º”ô–Ω–º–µ–Ω –∂“±–º—ã—Å (“õ—ã–º–±–∞—Ç, —Å–µ–Ω—ñ–º—Å—ñ–∑–¥—ñ–∫, –æ—Ç–±–∞—Å—ã, –∞“õ—à–∞)**  
   - “ö—ã–º–±–∞—Ç –¥–µ—Å–µ: ¬´“ö–∞–∑—ñ—Ä —Ç–æ–π“ì–∞ 20 –º—ã“£ –∞–ø–∞—Ä–∞–º—ã–∑, –±—ñ—Ä–∞“õ –∫”©–∑–≥–µ –∫–µ–ª–≥–µ–Ω–¥–µ –∞“õ—à–∞ “õ–∏–º–∞–π–º—ã–∑. –ë“±–ª ‚Äì ”©–º—ñ—Ä–ª—ñ–∫ –º“Ø—à–µ.¬ª  
   - –û–π–ª–∞–Ω—É –¥–µ—Å–µ: ¬´–û–π–ª–∞–Ω—ã“£—ã–∑, –±—ñ—Ä–∞“õ –∞—Å“õ—ã–Ω—ã–ø –∫–µ—Ç–ø–µ—É—ñ “Ø—à—ñ–Ω –±“Ø–≥—ñ–Ω —à–µ—à—ñ–º “õ–∞–±—ã–ª–¥–∞“ì–∞–Ω –¥“±—Ä—ã—Å.¬ª  
   - –°–µ–Ω—ñ–º—Å—ñ–∑–¥—ñ–∫: ¬´–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç, –æ—Ç–∑—ã–≤, –≥–∞—Ä–∞–Ω—Ç–∏—è –±”ô—Ä—ñ –±–∞—Ä. –ù”ô—Ç–∏–∂–µ –±–æ–ª–º–∞—Å–∞ ‚Äì “õ–∞–π—Ç–∞—Ä—ã–ø –±–µ—Ä–µ–º—ñ–∑.¬ª  
   - –ê“õ—à–∞ –∂–æ“õ –¥–µ—Å–µ: ¬´–ë”©–ª—ñ–ø —Ç”©–ª–µ—É –±–∞—Ä. –û—Ç–±–∞—Å—ã“£—ã–∑–¥–∞–Ω –∫”©–º–µ–∫ —Å“±—Ä–∞–ø –∫”©—Ä–¥—ñ“£—ñ–∑ –±–µ?¬ª  
   - –û—Ç–±–∞—Å—ã–º–µ–Ω –∞“õ—ã–ª–¥–∞—Å—É: ¬´–ö”©–∑ –∞—É—ã—Ä—Å–∞, —Å–µ–∑–µ—Ç—ñ–Ω ‚Äì ”©–∑—ñ“£—ñ–∑. –®–µ—à—ñ–º–¥—ñ –¥–µ ”©–∑—ñ“£—ñ–∑ “õ–∞–±—ã–ª–¥–∞—É—ã“£—ã–∑ –∫–µ—Ä–µ–∫.¬ª  
   - “ö–æ—Ä“õ–∞–º –¥–µ—Å–µ: ¬´–¢“Ø—Å—ñ–Ω–µ–º. –ë—ñ—Ä–∞“õ –±“±–ª ”©–Ω—ñ–º ‚Äì —Ç–∞–±–∏“ì–∏, –ê–ª–ª–∞“ì–∞ —Ç”ô—É–µ–∫–µ–ª –µ—Ç—ñ–ø –∫”©—Ä—ñ“£—ñ–∑. –†–µ–∑—É–ª—å—Ç–∞—Ç –±–æ–ª–º–∞—Å–∞ ‚Äì —Ç–æ“õ—Ç–∞—Ç–∞—Å—ã–∑.¬ª

6. **–î–æ–∂–∏–º / –ñ–∞–±—É**  
   ¬´–û–Ω–¥–∞ –±—ã–ª–∞–π –∂–∞—Å–∞–π—ã“õ: –º–µ–Ω ”©–∑ –∞—Ç—ã–º–Ω–∞–Ω –∂–µ“£—ñ–ª–¥—ñ–∫ –∂–∞—Å–∞–ø –∫”©—Ä–µ–π—ñ–Ω. “ö–∞–∑—ñ—Ä –ö–∞—Å–ø–∏–π–¥–µ 5-10 –º—ã“£ –±–∞—Ä –º–∞?¬ª  
   ¬´–ï–≥–µ—Ä –±“Ø–≥—ñ–Ω –∞–ª—Å–∞“£—ã–∑, –µ—Ä—Ç–µ“£ –¥–æ—Å—Ç–∞–≤–∫–∞–Ω—ã –∂—ñ–±–µ—Ä–µ–º—ñ–∑. –ë—ñ—Ä –∞–ø—Ç–∞ –∫“Ø—Ç—É–¥—ñ“£ “õ–∞–∂–µ—Ç—ñ –∂–æ“õ.¬ª

7. **–¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã “õ–æ—Ä—ã—Ç—ã–Ω–¥—ã–ª–∞—É**  
   ¬´–°—ñ–∑–±–µ–Ω –Ω–∞“õ—Ç—ã —Å”©–π–ª–µ—Å—ñ–ø, –∫”©–º–µ–∫—Ç–µ—Å–∫—ñ–º –∫–µ–ª–¥—ñ. –ï–º–¥—ñ —Å–æ–∑–±–∞–π—ã“õ. “ö–∞–∑—ñ—Ä –∑–∞–∫–∞–∑ –±–µ—Ä–µ–π—ñ–∫ ‚Äî –ö–∞—Å–ø–∏–π—ñ“£—ñ–∑–≥–µ –∫—ñ—Ä—ñ–ø –∫”©—Ä—ñ“£—ñ–∑—à—ñ.¬ª

---

üìå –ú—ñ–Ω–¥–µ—Ç—Ç—ñ —Å—Ç–∏–ª—å:
- –ù–∞“õ—Ç—ã, –∂—ã–ª—ã, –∂–∞–Ω–∞—à—ã—Ä
- –≠–º–æ—Ü–∏—è–º–µ–Ω: "“ö—É–∞–Ω—ã—à—Ç—ã–º—ã–Ω", "–®—ã–Ω—ã–º–µ–Ω –∫”©–º–µ–∫—Ç–µ—Å–∫—ñ–º –∫–µ–ª–µ–¥—ñ", "–ö”©–ø –∫–ª–∏–µ–Ω—Ç –æ—Å—ã —Å“±—Ä–∞“õ—Ç—ã “õ–æ—è–¥—ã"
- “ö–∞–∑–∞“õ—à–∞ “õ–∞—Ä–∞–ø–∞–π—ã–º —Ç—ñ–ª–º–µ–Ω, "—Å—ñ–∑" –¥–µ–ø —Å”©–π–ª–µ—Å
- –°”©–π–ª–µ—Å—É –¥–æ—Å—ã“£—ã–∑–±–µ–Ω, –∂–∞“õ—ã–Ω—ã“£—ã–∑–±–µ–Ω —Å”©–π–ª–µ—Å–∫–µ–Ω–¥–µ–π –±–æ–ª—Å—ã–Ω. –ê—Ä—Ç—ã“õ –ø–∞—Ñ–æ—Å, —à–∞–±–ª–æ–Ω –∂–æ“õ. –°–µ–Ω—ñ–º –º–µ–Ω “õ–∞—Ä–∞–ø–∞–π—ã–º —Ç—ñ–ª –±–æ–ª—Å—ã–Ω.

---

üì¶ –®–∞–±–ª–æ–Ω —Ñ—Ä–∞–∑–∞–ª–∞—Ä (“õ–æ–ª–¥–∞–Ω—É –º—ñ–Ω–¥–µ—Ç—Ç—ñ):

[–ü—Ä–æ–±–ª–µ–º–∞“ì–∞ —ç–º–ø–∞—Ç–∏—è]
- "–¢“Ø—Å—ñ–Ω–¥—ñ–º... –±“±–ª –º”ô—Å–µ–ª–µ –∫”©–ø –∞–¥–∞–º–¥–∞ –±–∞—Ä. –ñ–∞–ª“ì—ã–∑ –µ–º–µ—Å—Å—ñ–∑."
- "–ò”ô, –±“±–ª –∫–∞—Ç–∞—Ä–∞–∫—Ç–∞ –∞–ª“ì–∞—à“õ—ã –±–µ–ª–≥—ñ–ª–µ—Ä—ñ–Ω–µ “±“õ—Å–∞–π–¥—ã. –ï—Ä—Ç–µ “õ–æ–ª“ì–∞ –∞–ª—É –∫–µ—Ä–µ–∫."
- "–°—ñ–∑ —Å–∏—è“õ—Ç—ã –∫–ª–∏–µ–Ω—Ç—Ç–µ—Ä–º–µ–Ω –∫“Ø–Ω–¥–µ —Å”©–π–ª–µ—Å–µ–º. –ë–∞—Ä–ª—ã“ì—ã —Å—ñ–∑ —Å–∏—è“õ—Ç—ã —Å–µ–Ω—ñ–º —ñ–∑–¥–µ–π–¥—ñ."

[–ê—Å“õ—ã–Ω—É –µ—Å–∫–µ—Ä—Ç—É]
- "–ö”©–∑ –¥–µ–≥–µ–Ω –Ω”ô–∑—ñ–∫ –º“Ø—à–µ, –¥“±—Ä—ã—Å –µ–º –±–æ–ª–º–∞—Å–∞, –ª–∞–∑–µ—Ä–ª—ñ–∫ –æ–ø–µ—Ä–∞—Ü–∏—è“ì–∞ –∞–ø–∞—Ä—É—ã –º“Ø–º–∫—ñ–Ω."
- "–£–∞“õ—ã—Ç ”©—Ç–µ –∫–µ–ª–µ –±“±–ª –∫”©—Ä—É “õ–∞–±—ñ–ª–µ—Ç—ñ–Ω–µ “õ–∞—Ç—Ç—ã ”ô—Å–µ—Ä –µ—Ç–µ–¥—ñ, –æ–Ω—ã ”©–∑—ñ“£—ñ–∑ –¥–µ –±–∞–π“õ–∞“ì–∞–Ω –±–æ–ª–∞—Ä—Å—ã–∑."
- "–ñ–∞“õ—ã–Ω–¥–∞ –±—ñ—Ä –∫—ñ—Å—ñ –∂–∞–∑–¥—ã ‚Äî 40 –∂–∞—Å—Ç–∞, –∫”©–∑—ñ –±“±–ª–¥—ã—Ä–ª–∞–π –±–∞—Å—Ç–∞“ì–∞–Ω. –ê–ª“ì–∞—à—ã–Ω–¥–∞ –º”ô–Ω –±–µ—Ä–º–µ–≥–µ–Ω. 3 –∞–π–¥–∞–Ω –∫–µ–π—ñ–Ω –∫–∞—Ç–∞—Ä–∞–∫—Ç–∞ –±–∞—Å—Ç–∞–ª–¥—ã. –ë—ñ–∑–¥—ñ“£ ”©–Ω—ñ–º–º–µ–Ω 2 –∞–π–¥–∞ –∫”©–∑—ñ –∂–∞“õ—Å–∞—Ä–∞ –±–∞—Å—Ç–∞–¥—ã. –°–æ–ª —Å–µ–±–µ–ø—Ç—ñ, –µ—Ä—Ç–µ “õ–æ–ª“ì–∞ –∞–ª“ì–∞–Ω –¥“±—Ä—ã—Å –µ–∫–µ–Ω."

[Healvix —Å–∏–ø–∞—Ç—Ç–∞–º–∞—Å—ã]
- "Healvix ‚Äî –±“±–ª 100% —Ç–∞–±–∏“ì–∏ ”©–Ω—ñ–º. –Ü—à—ñ–Ω–¥–µ “õ–∞—Ä–∞–∂–∏–¥–µ–∫, –ª—é—Ç–µ–∏–Ω, E –≤–∏—Ç–∞–º–∏–Ω—ñ –±–∞—Ä. –ö”©–∑ —Ç–∞–º—ã—Ä–ª–∞—Ä—ã–Ω “õ–æ—Ä–µ–∫—Ç–µ–Ω–¥—ñ—Ä–µ–¥—ñ, –±“±–ª–¥—ã—Ä–ª–∞—É–¥—ã –∞–∑–∞–π—Ç–∞–¥—ã."
- "–ë“±–ª –∂–∞–π –∫–∞–ø–ª—è –µ–º–µ—Å, –∫”©–∑–¥—ñ“£ —ñ—à–∫—ñ –∂“Ø–π–µ—Å—ñ–Ω–µ ”ô—Å–µ—Ä –µ—Ç–µ—Ç—ñ–Ω –∫–æ–º–ø–ª–µ–∫—Å."

[–ë–∞“ì–∞ —Ç“Ø—Å—ñ–Ω–¥—ñ—Ä—É]
- "“ö–∞–∑—ñ—Ä –±—ñ–∑–¥–µ 6 –∞–π–ª—ã“õ –∫—É—Ä—Å“õ–∞ 180 –º—ã“£ —Ç–µ“£–≥–µ–≥–µ –∂–µ“£—ñ–ª–¥—ñ–∫ –∂“Ø—Ä—ñ–ø –∂–∞—Ç—ã—Ä."
- "–°—ñ–∑–≥–µ 3-–∞–π–ª—ã“õ –∫—É—Ä—Å (85 –º—ã“£) –Ω–µ–º–µ—Å–µ 6-–∞–π–ª—ã“õ –∫—É—Ä—Å (180 –º—ã“£) —Ç–∏—ñ–º–¥—ñ –±–æ–ª–∞–¥—ã."

[–ö“Ø–º”ô–Ω / “ö—ã–º–±–∞—Ç—Ç—ã“õ]
- "“ö–∞–∑—ñ—Ä —Ç–æ–π“ì–∞ 20 –º—ã“£ –∞–ø–∞—Ä–∞–º—ã–∑, –±—ñ—Ä–∞“õ –¥–µ–Ω—Å–∞—É–ª—ã“õ “Ø—à—ñ–Ω –∞“õ—à–∞ “õ–∏–º–∞–π–º—ã–∑ ‚Äî –¥“±—Ä—ã—Å –µ–º–µ—Å “õ–æ–π?"
- "–ë—ñ–∑ –æ–π—ã–Ω—à—ã“õ —Å–∞—Ç—ã–ø –∂–∞—Ç“õ–∞–Ω –∂–æ“õ–ø—ã–∑, –±“±–ª ‚Äî –∫”©—Ä—É “õ–∞–±—ñ–ª–µ—Ç—ñ“£—ñ–∑."
- "–ù”ô—Ç–∏–∂–µ –±–æ–ª–º–∞—Å–∞ ‚Äî –∞“õ—à–∞–Ω—ã “õ–∞–π—Ç–∞—Ä–∞–º—ã–∑. –ì–∞—Ä–∞–Ω—Ç–∏—è –±–∞—Ä."

[–ê“õ—ã–ª–¥–∞—Å—É / –æ—Ç–±–∞—Å—ã]
- "–ê“õ—ã–ª–¥–∞—Å—É –¥“±—Ä—ã—Å, –±—ñ—Ä–∞“õ –∫”©–∑—ñ“£—ñ–∑ –∞—É—ã—Ä—Å–∞, —Å–µ–∑–µ—Ç—ñ–Ω ‚Äî —Å—ñ–∑. –û—Ç–±–∞—Å—ã —Ç–µ–∫ —Å—ã—Ä—Ç—Ç–∞–π –∫”©—Ä–µ–¥—ñ, –∞–ª “õ–∏—ã–Ω–¥—ã“õ—Ç—ã —Å–µ–∑—ñ–Ω–µ—Ç—ñ–Ω ‚Äî ”©–∑—ñ“£—ñ–∑."
- "–°—ñ–∑ ‚Äî –æ—Ç–±–∞—Å—ã–Ω—ã“£ –∞—Å—ã—Ä–∞—É—à—ã—Å—ã, —Å–∞—É ”ô–∫–µ –±–æ–ª—É –∫–µ—Ä–µ–∫ “õ–æ–π."

[–î–æ–∂–∏–º / –∂–∞–±—É]
- "–û–Ω–¥–∞ –±—ã–ª–∞–π –∂–∞—Å–∞–π—ã“õ: –º–µ–Ω ”©–∑ –∞—Ç—ã–º–Ω–∞–Ω –∂–µ“£—ñ–ª–¥—ñ–∫ –∂–∞—Å–∞–ø –∫”©—Ä–µ–π—ñ–Ω."
- "–ï–≥–µ—Ä –±“Ø–≥—ñ–Ω –∞–ª—Å–∞“£—ã–∑, –µ—Ä—Ç–µ“£ –¥–æ—Å—Ç–∞–≤–∫–∞–Ω—ã –∂—ñ–±–µ—Ä–µ–º—ñ–∑. –ë—ñ—Ä –∞–ø—Ç–∞ –∫“Ø—Ç—É–¥—ñ“£ “õ–∞–∂–µ—Ç—ñ –∂–æ“õ."

---

üö´ –ú—ã–Ω–∞–Ω–¥–∞–π ¬´–∫–Ω–∏–∂–Ω—ã–π¬ª, —Ä–æ–±–æ—Ç —Å–∏—è“õ—Ç—ã —Å”©–π–ª–µ–º–¥–µ—Ä–¥–µ–Ω –∞—É–ª–∞“õ –±–æ–ª:
- ¬´–ë“±–ª —Å—ñ–∑ “Ø—à—ñ–Ω ”©—Ç–µ —Ç–∏—ñ–º–¥—ñ “±—Å—ã–Ω—ã—Å¬ª
- ¬´“ö–∞–Ω–¥–∞–π –∫”©–º–µ–∫ –∫–µ—Ä–µ–∫ –µ–∫–µ–Ω—ñ–Ω –∞–π—Ç—ã–ø ”©—Ç—Å–µ“£—ñ–∑‚Ä¶¬ª
- ¬´–ë“±–ª –º”ô—Å–µ–ª–µ –±–æ–π—ã–Ω—à–∞ “õ–æ—Å—ã–º—à–∞ –∞“õ–ø–∞—Ä–∞—Ç –±–µ—Ä–µ –∞–ª–∞–º—ã–Ω¬ª
- ¬´–ö”©–∑–¥—ñ“£ –∂–∞“ì–¥–∞–π—ã–Ω –∂–∞“õ—Å–∞—Ä—Ç—É “Ø—à—ñ–Ω ”©–Ω—ñ–º “±—Å—ã–Ω–∞–º—ã–Ω¬ª
- ¬´–°—ñ–∑ –Ω–µ –æ–π–ª–∞–π—Å—ã–∑?¬ª

‚úÖ –û–Ω—ã“£ –æ—Ä–Ω—ã–Ω–∞ –±—ã–ª–∞–π —Å”©–π–ª–µ:
- ¬´–ë—ã–ª–∞–π —ñ—Å—Ç–µ–π—ñ–∫, –º–µ–Ω —Å—ñ–∑–≥–µ ”©–∑ –∞—Ç—ã–º–Ω–∞–Ω –∂–µ“£—ñ–ª–¥—ñ–∫ –∂–∞—Å–∞–ø –∫”©—Ä–µ–π—ñ–Ω, –∂–∞—Ä–∞–π –º–∞?¬ª
- ¬´“ö–∞–∑—ñ—Ä –Ω–∞“õ—Ç—ã–ª–∞–ø —Å“±—Ä–∞–π—ã–Ω, –∫”©–º–µ–∫—Ç–µ—Å–∫—ñ–º –∫–µ–ª–µ–¥—ñ ‚Äî –∫”©–∑–¥–µ –±“±–ª–¥—ã—Ä–ª–∞—É –±–∞—Ä –º–∞, “õ—ã–∑–∞—Ä—É —à–µ?¬ª
- ¬´–ö”©–∑—ñ“£—ñ–∑–¥–µ –∫–∞—Ç–∞—Ä–∞–∫—Ç–∞ –±–æ–ª—Å–∞, “õ–∞–∑—ñ—Ä–¥–µ–Ω “õ–æ–ª“ì–∞ –∞–ª–º–∞—Å–∞“£—ã–∑, –∫”©—Ä—É –º“Ø–ª–¥–µ–º –Ω–∞—à–∞—Ä–ª–∞–ø –∫–µ—Ç—É—ñ –º“Ø–º–∫—ñ–Ω¬ª
- ¬´–ë“±–ª –∂–∞–π –¥”ô—Ä—ñ –µ–º–µ—Å, –∫”©–∑ —ñ—à—ñ–Ω–¥–µ–≥—ñ “õ–∞–Ω–∞–π–Ω–∞–ª—ã–º–¥—ã —Ä–µ—Ç—Ç–µ–π—Ç—ñ–Ω —Ç–∞–±–∏“ì–∏ –∫–µ—à–µ–Ω¬ª
- ¬´–ù–µ –¥–µ–π—Å—ñ–∑, –±“Ø–≥—ñ–Ω –±–∞—Å—Ç–∞–π–º—ã–∑ –±–∞?¬ª

üìå –ú–∞“õ—Å–∞—Ç ‚Äî —Å–µ–Ω—ñ–º–¥—ñ, —à—ã–Ω–∞–π—ã, —Ç—ñ—Ä—ñ –∞–¥–∞–º —Å–∏—è“õ—Ç—ã —Å”©–π–ª–µ—É.
"""

STAGE_PROMPTS = {
    "0": "–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ! üëã –ú–µ–Ω—ñ“£ –∞—Ç—ã–º –ê–π–¥–æ—Å üòä, Healvix –∫”©–∑ –µ–º–¥–µ—É –æ—Ä—Ç–∞–ª—ã“ì—ã–Ω–∞–Ω –∂–∞–∑—ã–ø –æ—Ç—ã—Ä–º—ã–Ω. “ö–∞–ª—ã“£—ã–∑ “õ–∞–ª–∞–π? –ï—Å—ñ–º—ñ“£—ñ–∑ –∫—ñ–º, “õ–∞–π “õ–∞–ª–∞–¥–∞–Ω—Å—ã–∑? –ö”©–∑—ñ“£—ñ–∑–≥–µ –±–∞–π–ª–∞–Ω—ã—Å—Ç—ã –ø—Ä–æ–±–ª–µ–º–∞ –±–∞—Ä –º–∞?",
    "1": "“ö–∞–∑—ñ—Ä –Ω–∞“õ—Ç—ã–ª–∞–ø —Å“±—Ä–∞–π—ã–Ω: –∫”©—Ä—É—ñ“£—ñ–∑–¥–µ “õ–∞–Ω–¥–∞–π ”©–∑–≥–µ—Ä—ñ—Å –±–∞—Ä? –ë“±–ª–¥—ã—Ä–ª–∞—É –º–∞, “õ—ã–∑–∞—Ä—É –º–∞, –∞—É—ã—Ä—Å—ã–Ω—É –º–∞, ”ô–ª–¥–µ –∫–∞—Ç–∞—Ä–∞–∫—Ç–∞ –±–µ–ª–≥—ñ–ª–µ—Ä—ñ –º–µ? üëÅÔ∏è",
    "2": "–ë“±–ª –∂–∞“ì–¥–∞–π “õ–∞—à–∞–Ω –±–∞—Å—Ç–∞–ª–¥—ã? –ë“±—Ä—ã–Ω –¥”ô—Ä—ñ–≥–µ—Ä–≥–µ “õ–∞—Ä–∞–ª–¥—ã“£—ã–∑ –±–∞? –ö–∞–ø–ª—è “õ–æ–ª–¥–∞–Ω–¥—ã“£—ã–∑ –±–∞, “õ–∞–Ω–¥–∞–π –µ–º –∂–∞—Å–∞–ø –∫”©—Ä–¥—ñ“£—ñ–∑? ‚è≥ü©∫",
    "3": "–ö”©–∑ ‚Äî ”©—Ç–µ –Ω”ô–∑—ñ–∫ –º“Ø—à–µ. –ï–≥–µ—Ä —É–∞“õ—ã—Ç—ã–Ω–¥–∞ “õ–æ–ª“ì–∞ –∞–ª–º–∞—Å–∞“£—ã–∑, –∞—Å“õ—ã–Ω—ã–ø –æ–ø–µ—Ä–∞—Ü–∏—è“ì–∞ –∞–ø–∞—Ä—É—ã –º“Ø–º–∫—ñ–Ω. –ë“±–ª –∂–∞“ì–¥–∞–π –∫”©—Ä—É —Å–∞–ø–∞—Å—ã–Ω–∞ ”ô—Å–µ—Ä –µ—Ç–µ–¥—ñ.",
    "4": "–°—ñ–∑–≥–µ –Ω–∞“õ—Ç—ã –∫”©–º–µ–∫—Ç–µ—Å–µ—Ç—ñ–Ω ”©–Ω—ñ–º–¥—ñ “±—Å—ã–Ω–∞–º: Healvix ‚Äî 100% —Ç–∞–±–∏“ì–∏ –∫–µ—à–µ–Ω. “ö“±—Ä–∞–º—ã–Ω–¥–∞ “õ–∞—Ä–∞–∂–∏–¥–µ–∫, –ª—é—Ç–µ–∏–Ω, –∫–∞–ª—å—Ü–∏–π, E –≤–∏—Ç–∞–º–∏–Ω—ñ –±–∞—Ä. –ë“±–ª –∂–∞–π –∫–∞–ø–ª—è –µ–º–µ—Å, –∫”©–∑ —ñ—à—ñ–Ω–¥–µ–≥—ñ “õ–∞–Ω –∞–π–Ω–∞–ª—ã–º–¥—ã “õ–∞–ª–ø—ã–Ω–∞ –∫–µ–ª—Ç—ñ—Ä–µ–¥—ñ. üåøüíä",
    "5": "–ë—ñ–∑–¥—ñ“£ –µ–º–¥—ñ–∫ –∫—É—Ä—Å—ã–º—ã–∑: 3 –∞–π ‚Äî 85 000‚Ç∏, 6 –∞–π ‚Äî 180 000‚Ç∏, 12 –∞–π ‚Äî 300 000‚Ç∏. –ë”©–ª—ñ–ø —Ç”©–ª–µ—É –¥–µ –±–∞—Ä: –∞–π—ã–Ω–∞ 18 750‚Ç∏ –Ω–µ–º–µ—Å–µ 9 375‚Ç∏. –°—ñ–∑–≥–µ “õ–∞–π—Å—ã—Å—ã —ã“£“ì–∞–π–ª—ã –±–æ–ª–∞–¥—ã? üí∞üéÅ",
    "6": "“ö–∞–Ω–¥–∞–π –¥–∞ –±—ñ—Ä –∫“Ø–º”ô–Ω —Ç—É—ã–Ω–¥–∞—Å–∞ ‚Äî –Ω–∞“õ—Ç—ã —Ç“Ø—Å—ñ–Ω–¥—ñ—Ä—ñ–ø –±–µ—Ä–µ–º. –°–µ–Ω—ñ–º—Å—ñ–∑–¥—ñ–∫, –±–∞“ì–∞, –æ—Ç–±–∞—Å—ã –º”ô—Å–µ–ª–µ—Å—ñ ‚Äî –±”ô—Ä—ñ–Ω–µ –∂–∞—É–∞–ø –¥–∞–π—ã–Ω. –ú—ã—Å–∞–ª—ã: '–ö–∞—Å–ø–∏–π—ñ“£—ñ–∑–¥–µ 5-10 –º—ã“£ –±–∞—Ä –º–∞? –ë“Ø–≥—ñ–Ω –∂–∞–∑—Å–∞“õ, –µ—Ä—Ç–µ“£ –±–∞—Å—Ç–∞–ø –∫–µ—Ç–µ—Å—ñ–∑.' üì≤üí∏"
}

def split_message(text, max_length=1000):
    parts = []
    while len(text) > max_length:
        split_index = text[:max_length].rfind(". ")
        if split_index == -1:
            split_index = max_length
        parts.append(text[:split_index+1].strip())
        text = text[split_index+1:].strip()
    if text:
        parts.append(text)
    return parts

def send_whatsapp_message(phone, message):
    payload = {
        "messaging_product": "whatsapp",
        "to": phone,
        "type": "text",
        "text": {"body": message}
    }
    response = requests.post(WHATSAPP_API_URL, headers=HEADERS, json=payload)
    print(f"üì§ –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response.status_code} {response.text}")
    return response

def get_gpt_response(user_msg, user_phone):
    try:
        user_data = USER_STATE.get(user_phone, {})
        history = user_data.get("history", [])
        stage = user_data.get("stage", "0")

        prompt = SALES_SCRIPT_PROMPT + "\n\n" + STAGE_PROMPTS.get(stage, "")

        messages = [{"role": "system", "content": prompt}]
        for item in history:
            messages.append({"role": "user", "content": item["user"]})
            messages.append({"role": "assistant", "content": item["bot"]})
        messages.append({"role": "user", "content": user_msg})

        response = client.chat.completions.create(
            model="gpt-4o",
            messages=messages,
            temperature=0.7
        )
        reply = response.choices[0].message.content.strip()

        next_stage = str(int(stage) + 1) if int(stage) < 6 else "6"

        USER_STATE[user_phone] = {
            "history": history[-5:] + [{"user": user_msg, "bot": reply}],
            "last_message": user_msg,
            "stage": next_stage,
            "last_time": time.time(),
            "followed_up": False
        }

        return reply
    except Exception as e:
        print(f"‚ùå GPT “õ–∞—Ç–µ—Å—ñ: {e}")
        return "–ö–µ—à—ñ—Ä—ñ“£—ñ–∑, “õ–∞–∑—ñ—Ä –∂–∞—É–∞–ø –±–µ—Ä–µ –∞–ª–º–∞–π–º—ã–Ω. –ö–µ–π—ñ–Ω—ñ—Ä–µ–∫ –∫”©—Ä—ñ“£—ñ–∑."

FOLLOW_UP_DELAY = 60
FOLLOW_UP_MESSAGE = "–°—ñ–∑–¥–µ–Ω –∂–∞—É–∞–ø –±–æ–ª–º–∞–π –∂–∞—Ç—ã—Ä ü§î –°“±—Ä–∞“õ—Ç–∞—Ä—ã“£—ã–∑ –±–æ–ª—Å–∞, –∂–∞—É–∞–ø –±–µ—Ä—É–≥–µ –¥–∞–π—ã–Ω–º—ã–Ω."

def follow_up_checker():
    while True:
        now = time.time()
        for phone, state in list(USER_STATE.items()):
            last_time = state.get("last_time")
            last_stage = state.get("stage", "0")
            if last_time:
                elapsed = now - last_time
                print(f"[‚è±Ô∏è] –ü—Ä–æ–≤–µ—Ä–∫–∞: {phone}, –ø—Ä–æ—à–ª–æ {elapsed:.1f} —Å–µ–∫")
                if elapsed > FOLLOW_UP_DELAY and not state.get("followed_up"):
                    print(f"[üîî] –û—Ç–ø—Ä–∞–≤–∫–∞ follow-up –∫–ª–∏–µ–Ω—Ç—É {phone}")
                    send_whatsapp_message(phone, "üìå –ê–π–¥–æ—Å: " + FOLLOW_UP_MESSAGE)
                    USER_STATE[phone]["followed_up"] = True
        time.sleep(30)

def start_followup_thread():
    if not hasattr(app, 'followup_started'):
        app.followup_started = True
        thread = threading.Thread(target=follow_up_checker, daemon=True)
        thread.start()
        print("üü¢ follow-up checker –∑–∞–ø—É—â–µ–Ω")

@app.route('/webhook', methods=['POST'])
def webhook():
    data = request.get_json()
    print("üì© –ö–µ–ª–≥–µ–Ω JSON:", data)

    try:
        messages = data["entry"][0]["changes"][0]["value"].get("messages")
        if messages:
            msg = messages[0]
            user_phone = msg["from"]
            user_msg = msg["text"]["body"]

            print(f"üí¨ {user_phone}: {user_msg}")

            start_followup_thread()

            if USER_STATE.get(user_phone, {}).get("last_message") == user_msg:
                print("‚ö†Ô∏è “ö–∞–π—Ç–∞–ª–∞—É ‚Äî ”©—Ç–∫—ñ–∑—ñ–ø –∂—ñ–±–µ—Ä–µ–º—ñ–∑")
                return jsonify({"status": "duplicate"}), 200

            reply = get_gpt_response(user_msg, user_phone)
            for part in split_message(reply):
                send_whatsapp_message(user_phone, part)

    except Exception as e:
        print(f"‚ùå –û–±—Ä–∞–±–æ—Ç–∫–∞ “õ–∞—Ç–µ—Å—ñ: {e}")

    return jsonify({"status": "ok"}), 200

@app.route('/', methods=['GET'])
def home():
    return "Healvix –±–æ—Ç —ñ—Å–∫–µ “õ–æ—Å—ã–ª–¥—ã!", 200

from datetime import datetime, timedelta

# ==== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ====

SALESRENDER_URL = "https://de.backend.salesrender.com/companies/1123/CRM"
SALESRENDER_TOKEN = "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2RlLmJhY2tlbmQuc2FsZXNyZW5kZXIuY29tLyIsImF1ZCI6IkNSTSIsImp0aSI6ImI4MjZmYjExM2Q4YjZiMzM3MWZmMTU3MTMwMzI1MTkzIiwiaWF0IjoxNzU0NzM1MDE3LCJ0eXBlIjoiYXBpIiwiY2lkIjoiMTEyMyIsInJlZiI6eyJhbGlhcyI6IkFQSSIsImlkIjoiMiJ9fQ.z6NiuV4g7bbdi_1BaRfEqDj-oZKjjniRJoQYKgWsHcc"

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –ø–æ–≤—Ç–æ—Ä–æ–≤
last_sent = {}

# ==== –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ WhatsApp ====
def handle_manager_message(phone, text):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ WhatsApp —á–µ—Ä–µ–∑ 360dialog.
    """
    payload = {
        "messaging_product": "whatsapp",  # –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û–ï –ø–æ–ª–µ!
        "to": phone,
        "type": "text",
        "text": {
            "body": text
        }
    }

    print(f"[DEBUG] –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ WhatsApp: {phone} ‚Üí {text}")
    print(f"[DEBUG] Payload: {payload}")

    try:
        response = requests.post(
            WHATSAPP_API_URL,
            headers=HEADERS,
            json=payload,
            timeout=10
        )
        print(f"[DEBUG] –û—Ç–≤–µ—Ç WhatsApp API: {response.status_code} {response.text}")
        response.raise_for_status()
    except requests.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ WhatsApp: {e}")

# ==== –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –≤ CRM ====
def fetch_order_from_crm(order_id):
    headers = {
        "Content-Type": "application/json",
        "Authorization": SALESRENDER_TOKEN
    }
    query = {
        "query": f"""
        query {{
            ordersFetcher(filters: {{ include: {{ ids: ["{order_id}"] }} }}) {{
                orders {{
                    id
                    data {{
                        humanNameFields {{
                            value {{
                                firstName
                                lastName
                            }}
                        }}
                        phoneFields {{
                            value {{
                                international
                                raw
                                national
                            }}
                        }}
                    }}
                }}
            }}
        }}
        """
    }
    try:
        response = requests.post(SALESRENDER_URL, headers=headers, json=query, timeout=10)
        response.raise_for_status()
        data = response.json().get("data", {}).get("ordersFetcher", {}).get("orders", [])
        return data[0] if data else None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ CRM API: {e}")
        return None


# ==== –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ ====
def process_salesrender_order(order):
    try:
        # –ï—Å–ª–∏ customer –ø—É—Å—Ç–æ–π, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–¥—Ç—è–Ω—É—Ç—å –∏–∑ CRM
        if not order.get("customer") and "id" in order:
            print(f"‚ö† customer –ø—É—Å—Ç, –ø–æ–¥—Ç—è–≥–∏–≤–∞—é –∏–∑ CRM –ø–æ ID {order['id']}")
            full_order = fetch_order_from_crm(order["id"])
            if full_order:
                order = full_order
            else:
                print("‚ùå CRM –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ ‚Äî –ø—Ä–æ–ø—É—Å–∫")
                return

        first_name = ""
        last_name = ""
        phone = ""

        if "customer" in order:
            first_name = order.get("customer", {}).get("name", {}).get("firstName", "").strip()
            last_name = order.get("customer", {}).get("name", {}).get("lastName", "").strip()
            phone = order.get("customer", {}).get("phone", {}).get("raw", "").strip()
        else:
            human_fields = order.get("data", {}).get("humanNameFields", [])
            phone_fields = order.get("data", {}).get("phoneFields", [])
            if human_fields:
                first_name = human_fields[0].get("value", {}).get("firstName", "").strip()
                last_name = human_fields[0].get("value", {}).get("lastName", "").strip()
            if phone_fields:
                phone = phone_fields[0].get("value", {}).get("international", "").strip()

        name = f"{first_name} {last_name}".strip()

        if not phone:
            print("‚ùå –¢–µ–ª–µ—Ñ–æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Äî –ø—Ä–æ–ø—É—Å–∫")
            return

        now = datetime.utcnow()
        if phone in last_sent and now - last_sent[phone] < timedelta(minutes=3):
            print(f"‚ö† –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –Ω–µ–¥–æ–∑–≤–æ–Ω –ø–æ {phone} ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
            return

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ (UTC+6)
        now_kz = now + timedelta(hours=6)
        if 5 <= now_kz.hour < 12:
            greeting = "“ö–∞–π—ã—Ä–ª—ã —Ç–∞“£"
        elif 12 <= now_kz.hour < 18:
            greeting = "–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ"
        else:
            greeting = "“ö–∞–π—ã—Ä–ª—ã –∫–µ—à"

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ GPT
        try:
            if name:
                prompt = (
                    f"{greeting}! –ö–ª–∏–µ–Ω—Ç—Ç—ñ“£ –∞—Ç—ã {name}. "
                    f"–û“ì–∞–Ω “õ–æ“£—ã—Ä–∞—É —à–∞–ª–¥—ã“õ, –±—ñ—Ä–∞“õ –±–∞–π–ª–∞–Ω—ã—Å –±–æ–ª–º–∞–¥—ã. "
                    f"–ö–ª–∏–µ–Ω—Ç–∫–µ WhatsApp-—Ç–∞ “õ—ã—Å“õ–∞, –∂—ã–ª—ã, –¥–æ—Å—Ç—ã“õ —Ö–∞–±–∞—Ä–ª–∞–º–∞ –∂–∞–∑—ã“£—ã–∑. "
                    f"–•–∞–±–∞—Ä–ª–∞–º–∞–Ω—ã –ê–π–¥–æ—Å –∞—Ç—ã–Ω–∞–Ω Healvix –æ—Ä—Ç–∞–ª—ã“ì—ã–Ω–∞–Ω –∂–∞–∑—ã“£—ã–∑."
                )
            else:
                prompt = (
                    f"{greeting}! –ë—ñ–∑ –∫–ª–∏–µ–Ω—Ç–∫–µ “õ–æ“£—ã—Ä–∞—É —à–∞–ª–¥—ã“õ, –±—ñ—Ä–∞“õ –±–∞–π–ª–∞–Ω—ã—Å –±–æ–ª–º–∞–¥—ã. "
                    f"–ö–ª–∏–µ–Ω—Ç–∫–µ WhatsApp-—Ç–∞ “õ—ã—Å“õ–∞, –∂—ã–ª—ã, –¥–æ—Å—Ç—ã“õ —Ö–∞–±–∞—Ä–ª–∞–º–∞ –∂–∞–∑—ã“£—ã–∑. "
                    f"–•–∞–±–∞—Ä–ª–∞–º–∞–Ω—ã –ê–π–¥–æ—Å –∞—Ç—ã–Ω–∞–Ω Healvix –æ—Ä—Ç–∞–ª—ã“ì—ã–Ω–∞–Ω –∂–∞–∑—ã“£—ã–∑. "
                    f"–ï—Å—ñ–º—ñ–Ω “õ–æ–ª–¥–∞–Ω–±–∞“£—ã–∑."
                )

            gpt_response = client.chat.completions.create(
                model="gpt-4o",
                messages=[{"role": "user", "content": prompt}],
                temperature=0.7
            )
            message_text = gpt_response.choices[0].message.content.strip()
        except Exception as e:
            print(f"‚ùå GPT “õ–∞—Ç–µ—Å—ñ: {e}")
            message_text = f"{greeting}! –ë—ñ–∑ —Å—ñ–∑–≥–µ “õ–æ“£—ã—Ä–∞—É —à–∞–ª–¥—ã“õ, –±—ñ—Ä–∞“õ –±–∞–π–ª–∞–Ω—ã—Å –±–æ–ª–º–∞–¥—ã. –£–∞“õ—ã—Ç—ã“£—ã–∑ –±–æ–ª—Å–∞, —Ö–∞–±–∞—Ä–ª–∞—Å—ã“£—ã–∑."

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ WhatsApp (—Ç–≤–æ—è —Ñ—É–Ω–∫—Ü–∏—è)
        handle_manager_message(phone, message_text)

        # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É
        last_sent[phone] = now
        print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ {phone}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞: {e}")

# ==== –í–µ–±—Ö—É–∫ ====
@app.route('/salesrender-hook', methods=['POST'])
def salesrender_hook():
    print("=== –í—Ö–æ–¥—è—â–∏–π –∑–∞–ø—Ä–æ—Å –≤ /salesrender-hook ===")
    try:
        data = request.get_json()
        print("Payload:", data)

        orders = (
            data.get("data", {}).get("orders")
            or data.get("orders")
            or [data]
        )

        if not orders or not isinstance(orders, list):
            return jsonify({"error": "–ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤"}), 400

        threading.Thread(
            target=process_salesrender_order,
            args=(orders[0],),
            daemon=True
        ).start()

        return jsonify({"status": "accepted"}), 200
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤–µ–±—Ö—É–∫–∞: {e}")
        return jsonify({"error": str(e)}), 500

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
