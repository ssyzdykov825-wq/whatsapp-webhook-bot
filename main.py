import os
import requests
from flask import Flask, request, jsonify
from openai import OpenAI

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask –∏ OpenAI –∫–ª–∏–µ–Ω—Ç–∞
app = Flask(__name__)
client = OpenAI(api_key=os.environ.get("OPENAI_API_KEY"))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ 360dialog
WHATSAPP_API_URL = "https://waba-v2.360dialog.io/messages"
WHATSAPP_API_KEY = os.environ.get("WHATSAPP_API_KEY")

HEADERS = {
    "Content-Type": "application/json",
    "D360-API-KEY": WHATSAPP_API_KEY
}

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ WhatsApp
def send_whatsapp_message(recipient_phone, message_text):
    payload = {
        "messaging_product": "whatsapp",
        "to": recipient_phone,
        "type": "text",
        "text": {
            "body": message_text
        }
    }
    response = requests.post(WHATSAPP_API_URL, headers=HEADERS, json=payload)
    print(f"üì§ –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response.status_code} {response.text}")
    return response

# –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç ChatGPT –ø–æ —Å–∫—Ä–∏–ø—Ç—É –ø—Ä–æ–¥–∞–∂
def get_gpt_response(user_message):
    try:
        system_prompt = """
–°–µ–Ω ‚Äî Healvix –∫–æ–º–ø–∞–Ω–∏—è—Å—ã–Ω—ã“£ —Å—ã–ø–∞–π—ã –∂”ô–Ω–µ —Å–µ–Ω—ñ–º–¥—ñ –æ–Ω–ª–∞–π–Ω –∫–µ“£–µ—Å—à—ñ—Å—ñ—Å—ñ“£. –°–µ–Ω—ñ“£ –º–∞“õ—Å–∞—Ç—ã“£ ‚Äî –∫–ª–∏–µ–Ω—Ç–∫–µ –∫”©—Ä—É–¥—ñ “õ–∞–ª–ø—ã–Ω–∞ –∫–µ–ª—Ç—ñ—Ä—É–≥–µ –∫”©–º–µ–∫—Ç–µ—Å–µ—Ç—ñ–Ω —Ç–∞–±–∏“ì–∏ ”©–Ω—ñ–º Healvix —Ç—É—Ä–∞–ª—ã —Ç“Ø—Å—ñ–Ω–¥—ñ—Ä—ñ–ø, —Å–∞—Ç—ã–ø –∞–ª—É“ì–∞ –±–∞“ì—ã—Ç—Ç–∞—É.

–ë–∞–π–ª–∞–Ω—ã—Å —Å–∫—Ä–∏–ø—Ç—ñ –º—ã–Ω–∞–¥–∞–π “õ“±—Ä—ã–ª—ã–º–¥–∞:

1. –°”ô–ª–µ–º–¥–µ—Å—É: ¬´–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ, –ú–µ–Ω—ñ“£ –µ—Å—ñ–º—ñ–º –ê–π–¥–æ—Å. Healvix –∫–æ–º–ø–∞–Ω–∏—è—Å—ã–Ω–∞–Ω. –°—ñ–∑ ”©—Ç—ñ–Ω—ñ–º “õ–∞–ª–¥—ã—Ä“ì–∞–Ω –µ–¥—ñ“£—ñ–∑ ‚Äî 1-2 –º–∏–Ω—É—Ç —Å”©–π–ª–µ—Å—É–≥–µ —ã“£“ì–∞–π–ª—ã –º–∞?¬ª
2. –ö”©—Ä—É –º”ô—Å–µ–ª–µ—Å—ñ–Ω –Ω–∞“õ—Ç—ã–ª–∞—É: ¬´–ë“±–ª ”©–∑—ñ“£—ñ–∑ “Ø—à—ñ–Ω –±–µ, ”ô–ª–¥–µ —Ç—É—ã—Å—Ç–∞—Ä—ã“£—ã–∑ “Ø—à—ñ–Ω –±–µ? “ö–∞–Ω–¥–∞–π –±–µ–ª–≥—ñ–ª–µ—Ä –º–∞–∑–∞–ª–∞–π–¥—ã ‚Äî –∫”©–∑ —à–∞—Ä—à–∞—É—ã, –±“±–ª–¥—ã—Ä –∫”©—Ä—É, ”ô–ª—Å—ñ–∑–¥—ñ–∫?¬ª
3. “ö–∞—É—ñ–ø —Ç—É—Ä–∞–ª—ã –µ—Å–∫–µ—Ä—Ç—É: ¬´–ö”©–ø –∞–¥–∞–º –∞–ª“ì–∞—à“õ—ã –±–µ–ª–≥—ñ–ª–µ—Ä–≥–µ –º”ô–Ω –±–µ—Ä–º–µ–π, –∫–µ–π—ñ–Ω –∫”©–∑—ñ–ª–¥—ñ—Ä—ñ–∫ –Ω–µ–º–µ—Å–µ –æ–ø–µ—Ä–∞—Ü–∏—è “õ–∞–∂–µ—Ç –±–æ–ª–∞–¥—ã. –ê–ª –∫”©–∑ ‚Äî —Ç—ñ—Å –µ–º–µ—Å, –æ–Ω—ã “õ–∞–ª–ø—ã–Ω–∞ –∫–µ–ª—Ç—ñ—Ä—É “õ–∏—ã–Ω.¬ª
4. Healvix —à–µ—à—ñ–º—ñ: ¬´Healvix “õ“±—Ä–∞–º—ã–Ω–¥–∞ —á–µ—Ä–Ω–∏–∫–∞, –ª—é—Ç–µ–∏–Ω, –í –¥”ô—Ä—É–º–µ–Ω–¥–µ—Ä—ñ –±–∞—Ä. –ö”©–∑–¥—ñ “õ–æ—Ä–µ–∫—Ç–µ–Ω–¥—ñ—Ä—ñ–ø, –∫”©—Ä—É–¥—ñ –∂–∞“õ—Å–∞—Ä—Ç–∞–¥—ã. –ö–ª–∏–µ–Ω—Ç—Ç–µ—Ä—ñ–º—ñ–∑ 2 –∞–ø—Ç–∞–¥–∞ –æ“£ –Ω”ô—Ç–∏–∂–µ –∫”©—Ä–µ–¥—ñ.¬ª
5. –¢–∞–ø—Å—ã—Ä—ã—Å“õ–∞ –±–∞“ì—ã—Ç—Ç–∞—É: ¬´“ö–∞–∑—ñ—Ä —Å—ñ–∑–≥–µ –∂–µ“£—ñ–ª–¥—ñ–∫ “õ–∞—Ä–∞—Å—Ç—ã—Ä—ã–ª“ì–∞–Ω. –ñ–µ—Ç–∫—ñ–∑—É —Ç–µ–≥—ñ–Ω, —Ç”©–ª–µ–º ‚Äî —Ç–µ–∫ –∞–ª“ì–∞–Ω –∫–µ–∑–¥–µ. –ë—ñ—Ä “õ–∞–ø—Ç–∞–º–∞–º–µ–Ω –±–∞—Å—Ç–∞–π–º—ã–∑ –±–∞, ”ô–ª–¥–µ —Ç–æ–ª—ã“õ –∫—É—Ä—Å –∞–ª–∞–º—ã–∑ –±–∞?¬ª
6. “ö–∞—Ä—Å—ã–ª—ã“õ—Ç–∞—Ä–º–µ–Ω –∂“±–º—ã—Å: ¬´–û–π–ª–∞–Ω–∞–º –¥–µ—Å–µ“£—ñ–∑ ‚Äî —Ç“Ø—Å—ñ–Ω–µ–º—ñ–∑, –±—ñ—Ä–∞“õ –∞–ª–¥—ã–Ω –∞–ª—É ‚Äî –æ“£–∞–π ”ô—Ä—ñ –∞—Ä–∑–∞–Ω. Healvix ‚Äî “õ–∞—É—ñ–ø—Å—ñ–∑, –∂–∞–Ω–∞–º–∞ ”ô—Å–µ—Ä—ñ –∂–æ“õ.¬ª
7. –ê—è“õ—Ç–∞—É: ¬´–û–Ω–¥–∞ —Ç–∞–ø—Å—ã—Ä—ã—Å—Ç—ã —Ä”ô—Å—ñ–º–¥–µ–π—ñ–∫. –¢–µ–∫ –∞—Ç—ã-–∂”©–Ω—ñ“£—ñ–∑–¥—ñ, –º–µ–∫–µ–Ω–∂–∞–π –º–µ–Ω –±–∞–π–ª–∞–Ω—ã—Å –Ω”©–º—ñ—Ä—ñ“£—ñ–∑–¥—ñ –∂—ñ–±–µ—Ä—Å–µ“£—ñ–∑ –±–æ–ª–¥—ã.¬ª

‚ö†Ô∏è –ú–∞“£—ã–∑–¥—ã: 
‚Äî –ï–≥–µ—Ä –∫–ª–∏–µ–Ω—Ç —Å“±—Ä–∞“õ “õ–æ–π—Å–∞ ("–ë–∞“ì–∞—Å—ã “õ–∞–Ω–¥–∞–π?", "“ö“±—Ä–∞–º—ã?", "–ö”©–º–µ–∫—Ç–µ—Å–µ –º–µ?"), –Ω–∞“õ—Ç—ã –∂–∞—É–∞–ø –±–µ—Ä, –±—ñ—Ä–∞“õ “õ—ã—Å—ã–º –∂–∞—Å–∞–º–∞.  
‚Äî –°”©–π–ª–µ—Å—É –∂—ã–ª—ã, —Å–µ–Ω—ñ–º–¥—ñ, –±—ñ—Ä–∞“õ –º–∞“õ—Å–∞—Ç—Ç—ã –±–æ–ª—Å—ã–Ω.  
‚Äî –ñ–∞—É–∞–ø—Ç–∞—Ä —Ç—ã–º “±–∑–∞“õ –±–æ–ª–º–∞—Å—ã–Ω.  
‚Äî –°–∫—Ä–∏–ø—Ç–∫–µ —Å“Ø–π–µ–Ω, –±—ñ—Ä–∞“õ –∂–∞—É–∞–ø—Ç—ã ”ô—Ä –∫–ª–∏–µ–Ω—Ç–∫–µ –±–µ–π—ñ–º–¥–µ.
"""

        response = client.chat.completions.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": user_message}
            ],
            temperature=0.7
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        print(f"‚ùå GPT “õ–∞—Ç–µ—Å—ñ: {e}")
        return "–ö–µ—à—ñ—Ä—ñ“£—ñ–∑, —É–∞“õ—ã—Ç—à–∞ –∂–∞—É–∞–ø –±–µ—Ä–µ –∞–ª–º–∞–π–º—ã–Ω. –ö–µ–π—ñ–Ω—ñ—Ä–µ–∫ “õ–∞–π—Ç–∞ –∫”©—Ä—ñ“£—ñ–∑."

# –í–µ–±—Ö—É–∫
@app.route('/webhook', methods=['POST'])
def webhook():
    data = request.get_json()
    print("üì© –í—Ö–æ–¥—è—â–∏–π JSON:", data)

    try:
        messages = data["entry"][0]["changes"][0]["value"].get("messages")
        if messages:
            user_message = messages[0]["text"]["body"]
            user_phone = messages[0]["from"]

            print(f"üí¨ –•–∞–±–∞—Ä–ª–∞–º–∞ {user_phone} –Ω”©–º—ñ—Ä—ñ–Ω–µ–Ω: {user_message}")
            gpt_reply = get_gpt_response(user_message)
            send_whatsapp_message(user_phone, gpt_reply)
    except Exception as e:
        print(f"‚ùå –í–µ–±—Ö—É–∫ “õ–∞—Ç–µ—Å—ñ: {e}")

    return jsonify({"status": "ok"}), 200

@app.route('/', methods=['GET'])
def home():
    return "–ë–æ—Ç —ñ—Å–∫–µ “õ–æ—Å—ã–ª–¥—ã!", 200

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
