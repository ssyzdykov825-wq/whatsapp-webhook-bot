import os
import requests
from flask import Flask, request, jsonify
from openai import OpenAI

app = Flask(__name__)
client = OpenAI(api_key=os.environ.get("OPENAI_API_KEY"))

WHATSAPP_API_URL = "https://waba-v2.360dialog.io/messages"
WHATSAPP_API_KEY = os.environ.get("WHATSAPP_API_KEY")

HEADERS = {
    "Content-Type": "application/json",
    "D360-API-KEY": WHATSAPP_API_KEY
}

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∏–∞–ª–æ–≥–æ–≤
USER_STATES = {}

# –ë–∞–∑–æ–≤—ã–π system-–ø—Ä–æ–º–ø—Ç
BASE_PROMPT = """
–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –ø—Ä–æ–¥—É–∫—Ç—É Healvix ‚Äî –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–º—É —Å—Ä–µ–¥—Å—Ç–≤—É –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∑—Ä–µ–Ω–∏—è.

–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–∏–∞–ª–æ–≥–∞ –º—è–≥–∫–æ, –Ω–æ —É–≤–µ—Ä–µ–Ω–Ω–æ –ø–æ–¥–≤–µ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞ –∫ –ø–æ–∫—É–ø–∫–µ, –∫–∞–∫ –¥–µ–ª–∞–µ—Ç —Ö–æ—Ä–æ—à–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –∫–æ–ª–ª-—Ü–µ–Ω—Ç—Ä–∞. –ò—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º—É–ª—É AIDA:

üîπ Attention ‚Äî –ø—Ä–∏–≤–ª–µ–∫–∏ –≤–Ω–∏–º–∞–Ω–∏–µ:
–£–∫–∞–∂–∏ –Ω–∞ –ø—Ä–æ–±–ª–µ–º—É, —Å –∫–æ—Ç–æ—Ä–æ–π —Å—Ç–∞–ª–∫–∏–≤–∞—é—Ç—Å—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ª—é–¥–µ–π: —É—Ö—É–¥—à–µ–Ω–∏–µ –∑—Ä–µ–Ω–∏—è –ø–æ—Å–ª–µ 30‚Äì35 –ª–µ—Ç, —É—Å—Ç–∞–ª–æ—Å—Ç—å –æ—Ç –≥–∞–¥–∂–µ—Ç–æ–≤, —Å—É—Ö–æ—Å—Ç—å –≥–ª–∞–∑, –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏.

üîπ Interest ‚Äî –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å—É–π:
–†–∞—Å—Å–∫–∞–∂–∏ –æ Healvix ‚Äî —ç—Ç–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –ø—Ä–µ–ø–∞—Ä–∞—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç–∫—Å—Ç—Ä–∞–∫—Ç–∞ —á–µ—Ä–Ω–∏–∫–∏, –ª—é—Ç–µ–∏–Ω–∞ –∏ —Ç–∞—É—Ä–∏–Ω–∞. –ë–µ–∑ —Ö–∏–º–∏–∏, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è.

üîπ Desire ‚Äî –ø—Ä–æ–±—É–¥–∏ –∂–µ–ª–∞–Ω–∏–µ:
Healvix –±–µ–∑–æ–ø–∞—Å–µ–Ω, –ø–æ–¥—Ö–æ–¥–∏—Ç –ª—é–¥—è–º —Å—Ç–∞—Ä—à–µ 35 –ª–µ—Ç, –º–æ–∂–Ω–æ —Å–æ–≤–º–µ—â–∞—Ç—å —Å –¥—Ä—É–≥–∏–º–∏ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞–º–∏, –Ω–µ –∏–º–µ–µ—Ç –ø–æ–±–æ—á–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤. –ú–Ω–æ–≥–∏–µ –∑–∞–º–µ—á–∞—é—Ç –ø–µ—Ä–≤—ã–µ —É–ª—É—á—à–µ–Ω–∏—è —É–∂–µ —á–µ—Ä–µ–∑ 7‚Äì10 –¥–Ω–µ–π. –ë–æ–ª–µ–µ 10 000 –¥–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ –∏ –°–ù–ì.

üîπ Action ‚Äî –ø–æ–¥–≤–µ–¥–∏ –∫ –¥–µ–π—Å—Ç–≤–∏—é:
–ò—Å–ø–æ–ª—å–∑—É–π –º—è–≥–∫–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏: ¬´–ú–æ–≥—É –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–ª—è –≤–∞—Å –Ω–∞ –ø—Ä–æ–±—É¬ª, ¬´–•–æ—Ç–∏—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å ‚Äî —è –ø–æ–¥—Å–∫–∞–∂—É, –∫–∞–∫ –ª—É—á—à–µ¬ª, ¬´–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ‚Äî —Å —Ä–∞–¥–æ—Å—Ç—å—é –æ—Ç–≤–µ—á—É¬ª.

‚ÄºÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
- –ü—Ä–∏–º–µ–Ω—è–π –º—è–≥–∫–æ–µ —É–±–µ–∂–¥–µ–Ω–∏–µ: ¬´–ï—Å–ª–∏ –æ—Ç–ª–æ–∂–∏—Ç—å, –∑—Ä–µ–Ω–∏–µ –º–æ–∂–µ—Ç —É—Ö—É–¥—à–∏—Ç—å—Å—è¬ª, ¬´–ß–µ–º —Ä–∞–Ω—å—à–µ –Ω–∞—á–∞—Ç—å ‚Äî —Ç–µ–º –≤—ã—à–µ —à–∞–Ω—Å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑—Ä–µ–Ω–∏–µ¬ª.
- –ü—Ä–∏ –≤–æ–ø—Ä–æ—Å–µ –æ —Ü–µ–Ω–µ: –Ω–µ –Ω–∞–∑—ã–≤–∞–π –µ—ë —Å—Ä–∞–∑—É, –∞–∫—Ü–µ–Ω—Ç–∏—Ä—É–π –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ ‚Äî ¬´–ì–ª–∞–≤–Ω–æ–µ, —á—Ç–æ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç. –õ—é–¥–∏ –Ω–µ –∂–∞–ª–µ—é—Ç, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ Healvix¬ª.
- –ü—Ä–∏ –≤–æ–ø—Ä–æ—Å–∞—Ö –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: —É–≤–µ—Ä–µ–Ω–Ω–æ —Å–æ–æ–±—â–∏, —á—Ç–æ –ø—Ä–æ–¥—É–∫—Ç —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–∞–∂–µ –ø—Ä–∏ —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è—Ö.
- –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã. –û–±—â–∞–π—Å—è –¥—Ä—É–∂–µ–ª—é–±–Ω–æ, —Å –∑–∞–±–æ—Ç–æ–π –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é.
- –†–∞–±–æ—Ç–∞–π –Ω–∞ —è–∑—ã–∫–µ –∫–ª–∏–µ–Ω—Ç–∞ (—Ä—É—Å—Å–∫–∏–π –∏–ª–∏ –∫–∞–∑–∞—Ö—Å–∫–∏–π) ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è–π –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—é.

–¢—ã ‚Äî –Ω–µ –ø—Ä–æ—Å—Ç–æ –±–æ—Ç. –¢—ã ‚Äî –ø–æ–º–æ–≥–∞—é—â–∏–π —ç–∫—Å–ø–µ—Ä—Ç, –∫–æ—Ç–æ—Ä–æ–º—É –¥–æ–≤–µ—Ä—è—é—Ç.
"""

def send_whatsapp_message(phone, message):
    payload = {
        "messaging_product": "whatsapp",
        "to": phone,
        "type": "text",
        "text": {"body": message}
    }
    response = requests.post(WHATSAPP_API_URL, headers=HEADERS, json=payload)
    print(f"üì§ –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response.status_code} {response.text}")
    return response

def get_gpt_response(user_msg, user_phone):
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é (–µ—Å–ª–∏ –µ—Å—Ç—å)
        history = USER_STATES.get(user_phone, {}).get("history", [])

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è GPT
        messages = [{"role": "system", "content": BASE_PROMPT}]
        for h in history:
            messages.append({"role": "user", "content": h["user"]})
            messages.append({"role": "assistant", "content": h["bot"]})
        messages.append({"role": "user", "content": user_msg})

        # GPT-4o –æ—Ç–≤–µ—Ç
        response = client.chat.completions.create(
            model="gpt-4o",
            messages=messages,
            temperature=0.7
        )
        reply = response.choices[0].message.content.strip()

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é
        USER_STATES[user_phone] = {
            "last_message": user_msg,
            "history": history[-4:] + [{"user": user_msg, "bot": reply}]
        }

        return reply
    except Exception as e:
        print(f"‚ùå GPT –æ—à–∏–±–∫–∞: {e}")
        return "“ö–∞—Ç–µ–ª—ñ–∫ –æ—Ä—ã–Ω –∞–ª–¥—ã / –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ."

@app.route('/webhook', methods=['POST'])
def webhook():
    data = request.get_json()
    print("üì© –í—Ö–æ–¥—è—â–∏–π JSON:", data)

    try:
        messages = data["entry"][0]["changes"][0]["value"].get("messages")
        if messages:
            msg = messages[0]
            user_msg = msg["text"]["body"]
            user_phone = msg["from"]

            print(f"üí¨ –û—Ç {user_phone}: {user_msg}")

            # –ò–≥–Ω–æ—Ä –µ—Å–ª–∏ –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è
            if USER_STATES.get(user_phone, {}).get("last_message") == user_msg:
                print("‚ö†Ô∏è –ü–æ–≤—Ç–æ—Ä ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                return jsonify({"status": "duplicate"}), 200

            # GPT –æ—Ç–≤–µ—Ç
            reply = get_gpt_response(user_msg, user_phone)
            send_whatsapp_message(user_phone, reply)

            # üîó CRM –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è (–æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö)
            # crm_payload = {"phone": user_phone, "text": user_msg}
            # requests.post("https://–≤–∞—à_crm_webhook_url", json=crm_payload)

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")

    return jsonify({"status": "ok"}), 200

@app.route('/', methods=['GET'])
def home():
    return "Healvix –±–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω!", 200

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
